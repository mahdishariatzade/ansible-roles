name: CI

on:
  push:
    branches: ["**"]
    tags: ["*"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint YAML
        run: yamllint .
        continue-on-error: true

      - name: Lint Ansible
        run: ansible-lint .
        continue-on-error: true

      - name: Update version in galaxy.yml
        run: |
          VERSION=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
          sed -i "s/^version: 0.0.0/version: $VERSION/" galaxy.yml

      - name: Build Ansible collection
        run: |
          mkdir -p dist
          ansible-galaxy collection build --output-path dist
          ls -l dist | cat

      - name: Upload collection artifact
        uses: actions/upload-artifact@v4
        with:
          name: collection-tarball
          path: dist/*.tar.gz

      - name: Run role tests (syntax + check)
        env:
          ANSIBLE_ROLES_PATH: ${{ github.workspace }}/roles
        shell: bash
        run: |
          set -euo pipefail
          roles=(backup-mssql-docker transfer-files upload-to-s3)
          for role in "${roles[@]}"; do
            echo "===> Testing $role"
            inv="roles/$role/tests/inventory"
            play="roles/$role/tests/test.yml"
            if [[ -f "$inv" && -f "$play" ]]; then
              ansible-playbook -i "$inv" "$play" --connection=local --syntax-check
              ansible-playbook -i "$inv" "$play" --connection=local --check
            else
              echo "No tests found for $role, skipping"
            fi
          done

  publish:
    name: Publish to Galaxy (on tag)
    if: startsWith(github.ref, 'refs/tags/')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install "ansible>=9,<10"

      - name: Build and publish
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          ansible-galaxy collection build --output-path dist
          tarball=$(ls -1 dist/*.tar.gz | head -n 1 || true)
          if [[ -z "${GALAXY_API_KEY:-}" ]]; then
            echo "GALAXY_API_KEY is not set; skipping publish."
            exit 0
          fi
          if [[ -z "${tarball:-}" ]]; then
            echo "No collection artifact found to publish." >&2
            exit 1
          fi
          echo "Publishing $tarball to Ansible Galaxy..."
          ansible-galaxy collection publish "$tarball" --token "$GALAXY_API_KEY"
