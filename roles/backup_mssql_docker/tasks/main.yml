---
- name: Ensure backup directory exists inside container
  community.docker.docker_container_exec:
    container: '{{ mssql_container_name }}'
    argv: ['mkdir', '-p', '/var/opt/mssql/backups']
  ignore_errors: true

- name: Compute timestamp for backup filename if not provided
  ansible.builtin.set_fact:
    date_string: "{{ date_string | default(now(fmt='%s')) }}"
  when: date_string is not defined

- name: Compute backup file path
  ansible.builtin.set_fact:
    backup_file: "/var/opt/mssql/backups/backup_mssql_{{ compression | ternary('compressed', 'not_compressed') }}_{{ database_name }}_{{ date_string }}.bak"

- name: Backup MSSQL Database
  register: backup_result
  no_log: '{{ mssql_hide_sensitive | default(true) }}'
  community.docker.docker_container_exec:
    container: '{{ mssql_container_name }}'
    argv:
      - /opt/mssql-tools18/bin/sqlcmd
      - -S
      - localhost
      - -U
      - '{{ mssql_username }}'
      - -P
      - '{{ mssql_password }}'
      - -C
      - -h-1
      - -Q
      - "{{ lookup('ansible.builtin.template', 'backup_query.j2') }}"
  failed_when: '"backup database successfully" not in (backup_result.stdout | default("") | lower)'
  changed_when: '"backup database successfully" in (backup_result.stdout | default("") | lower)'
